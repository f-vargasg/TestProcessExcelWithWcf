//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinTestService.TransfFilesSrvRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransfFilesSrvRef.IMyServiceTranferFiles")]
    public interface IMyServiceTranferFiles {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyServiceTranferFiles/Download", ReplyAction="http://tempuri.org/IMyServiceTranferFiles/DownloadResponse")]
        System.IO.Stream Download(string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyServiceTranferFiles/Download", ReplyAction="http://tempuri.org/IMyServiceTranferFiles/DownloadResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadAsync(string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyServiceTranferFiles/Upload", ReplyAction="http://tempuri.org/IMyServiceTranferFiles/UploadResponse")]
        string Upload(System.IO.Stream input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyServiceTranferFiles/Upload", ReplyAction="http://tempuri.org/IMyServiceTranferFiles/UploadResponse")]
        System.Threading.Tasks.Task<string> UploadAsync(System.IO.Stream input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyServiceTranferFiles/StoreToDb", ReplyAction="http://tempuri.org/IMyServiceTranferFiles/StoreToDbResponse")]
        bool StoreToDb(string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyServiceTranferFiles/StoreToDb", ReplyAction="http://tempuri.org/IMyServiceTranferFiles/StoreToDbResponse")]
        System.Threading.Tasks.Task<bool> StoreToDbAsync(string filename);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceTranferFilesChannel : WinTestService.TransfFilesSrvRef.IMyServiceTranferFiles, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceTranferFilesClient : System.ServiceModel.ClientBase<WinTestService.TransfFilesSrvRef.IMyServiceTranferFiles>, WinTestService.TransfFilesSrvRef.IMyServiceTranferFiles {
        
        public MyServiceTranferFilesClient() {
        }
        
        public MyServiceTranferFilesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceTranferFilesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceTranferFilesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceTranferFilesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.Stream Download(string file) {
            return base.Channel.Download(file);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadAsync(string file) {
            return base.Channel.DownloadAsync(file);
        }
        
        public string Upload(System.IO.Stream input) {
            return base.Channel.Upload(input);
        }
        
        public System.Threading.Tasks.Task<string> UploadAsync(System.IO.Stream input) {
            return base.Channel.UploadAsync(input);
        }
        
        public bool StoreToDb(string filename) {
            return base.Channel.StoreToDb(filename);
        }
        
        public System.Threading.Tasks.Task<bool> StoreToDbAsync(string filename) {
            return base.Channel.StoreToDbAsync(filename);
        }
    }
}
